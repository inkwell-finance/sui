{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Oracle } from \"./oracle/index.js\";\nimport type { QueueData } from \"./queue/index.js\";\nimport { Queue } from \"./queue/index.js\";\nimport { State } from \"./state/index.js\";\n\nimport { TTLCache } from \"@brokerloop/ttlcache\";\nimport type {\n  MoveStruct,\n  MoveValue,\n  SuiObjectResponse,\n} from \"@mysten/sui/client\";\nimport type { SuiClient } from \"@mysten/sui/client\";\nimport type { Queue as SolanaQueue } from \"@switchboard-xyz/on-demand\";\nimport BN from \"bn.js\";\n\nexport { Oracle, Queue, State };\n\nexport * from \"./aggregator/index.js\";\nexport * from \"./oracle/index.js\";\nexport * from \"./queue/index.js\";\nexport * from \"./state/index.js\";\nexport * from \"@switchboard-xyz/on-demand\";\n\nexport const ON_DEMAND_MAINNET_OBJECT_PACKAGE_ID =\n  \"0xc3c7e6eb7202e9fb0389a2f7542b91cc40e4f7a33c02554fec11c4c92f938ea3\";\nexport const ON_DEMAND_MAINNET_STATE_OBJECT_ID =\n  \"0x93d2a8222bb2006d16285ac858ec2ae5f644851917504b94debde8032664a791\";\nexport const ON_DEMAND_TESTNET_OBJECT_PACKAGE_ID =\n  \"0xdd96e1c8d6d61c4642b9b73eefb1021cc5f93f489b794bca11c81d55fcf43ce2\";\nexport const ON_DEMAND_TESTNET_STATE_OBJECT_ID =\n  \"0x2086fdde07a8f4726a3fc72d6ef1021343a781d42de6541ca412cf50b4339ad6\";\n\n// ==============================================================================\n// Caching for Fetch Update Ix\n\n// 1 min cache for sui cache\nexport const suiQueueCache = new TTLCache<string, QueueData>({\n  ttl: 1000 * 60,\n});\n\n// 5 min solana queue cache - reloads the sol program every 5 minutes max\nexport const solanaProgramCache = new TTLCache<string, SolanaQueue>({\n  ttl: 1000 * 60 * 5,\n});\n\n// ==============================================================================\n\nexport interface SwitchboardState {\n  switchboardAddress: string;\n  guardianQueueId: string;\n  oracleQueueId: string;\n  mainnet: boolean;\n}\n\nexport interface CommonOptions {\n  switchboardAddress?: string;\n  stateObjectId?: string;\n  guardianQueueId?: string;\n  oracleQueueId?: string;\n  chainId?: string;\n}\n\nexport class SwitchboardClient {\n  state: Promise<SwitchboardState | undefined>;\n\n  constructor(readonly client: SuiClient, options?: CommonOptions) {\n    this.state = getSwitchboardState(client, options);\n  }\n\n  /**\n   * Fetch the current state of the Switchboard (on-demand package ID, guardian queue ID, oracle queue ID)\n   * @param retries Number of retries to fetch the state\n   */\n  async fetchState(\n    options?: CommonOptions,\n    retries: number = 3\n  ): Promise<SwitchboardState> {\n    if (retries <= 0) {\n      throw new Error(\n        \"Failed to fetch Switchboard state after multiple attempts\"\n      );\n    }\n\n    try {\n      const state = await this.state;\n      if (!state) {\n        this.state = getSwitchboardState(this.client, options);\n        return this.fetchState(options, retries - 1);\n      }\n\n      return {\n        switchboardAddress:\n          options?.switchboardAddress ?? state.switchboardAddress,\n        guardianQueueId: options?.guardianQueueId ?? state.guardianQueueId,\n        oracleQueueId: options?.oracleQueueId ?? state.oracleQueueId,\n        mainnet: state.mainnet,\n      };\n    } catch (error) {\n      console.error(\"Error fetching Switchboard state, retrying...\");\n      return this.fetchState(options, retries - 1);\n    }\n  }\n}\n\n// Helper function to get the Switchboard state\nexport async function getSwitchboardState(\n  client: SuiClient,\n  options?: CommonOptions\n): Promise<SwitchboardState | undefined> {\n  try {\n    const chainId = options?.chainId ?? (await client.getChainIdentifier());\n    const mainnet = chainId !== \"4c78adac\"; // Check if mainnet or testnet\n    console.log(\"Chain ID:\", chainId);\n    console.log(\"Mainnet:\", mainnet);\n    console.log(\"Options:\", options);\n    const stateObjectId = options?.stateObjectId ?? (mainnet ? ON_DEMAND_MAINNET_STATE_OBJECT_ID : ON_DEMAND_TESTNET_STATE_OBJECT_ID);\n    console.log(\"State Object ID:\", stateObjectId);\n    const data = await State.fetch(\n      client,\n      stateObjectId\n    );\n\n    return {\n      switchboardAddress: options?.switchboardAddress ?? data.onDemandPackageId,\n      guardianQueueId: options?.guardianQueueId ?? data.guardianQueue,\n      oracleQueueId: options?.oracleQueueId ?? data.oracleQueue,\n      mainnet,\n    };\n  } catch (error) {\n    console.error(\"Failed to retrieve Switchboard state:\", error);\n  }\n}\n\nexport function getFieldsFromObject(response: SuiObjectResponse): {\n  [key: string]: MoveValue;\n} {\n  console.log(\"Response:\", response);\n  // Check if 'data' and 'content' exist and are of the expected type\n  if (\n    response.data?.content &&\n    response.data.content.dataType === \"moveObject\" &&\n    !Array.isArray(response.data.content.fields) &&\n    !(\"type\" in response.data.content.fields)\n  ) {\n    // Safely return 'fields' from 'content'\n    return response.data.content.fields;\n  }\n\n  throw new Error(\"Invalid response data\");\n}\n\nexport class ObjectParsingHelper {\n  public static asString(value: MoveValue): string {\n    if (typeof value === \"string\") {\n      return value;\n    }\n    throw new Error(\"Invalid Move String\");\n  }\n\n  public static asNumber(value: MoveValue): number {\n    try {\n      return parseInt(value as string);\n    } catch (e) {\n      throw new Error(\"Invalid Move Number\");\n    }\n  }\n\n  public static asArray(value: MoveValue): MoveValue[] {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    throw new Error(\"Invalid MoveValueArray\");\n  }\n\n  public static asUint8Array(value: MoveValue): Uint8Array {\n    if (Array.isArray(value) && value.every((v) => typeof v === \"number\")) {\n      return new Uint8Array(value as number[]);\n    }\n    throw new Error(\"Invalid Move Uint8Array\");\n  }\n\n  public static asId(value: MoveValue): string {\n    if (typeof value === \"object\" && \"id\" in value) {\n      const idWrapper = value as { id: string };\n      return idWrapper.id;\n    }\n    throw new Error(\"Invalid Move Id\");\n  }\n\n  public static asStruct(value: MoveValue): MoveStruct {\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n      return value as MoveStruct;\n    }\n    throw new Error(\"Invalid Move Struct\");\n  }\n\n  // Parse switchboard move decimal into BN, whether or not nested in \"fields\"\n  public static asBN(value: MoveValue): BN {\n    if (typeof value !== \"object\") {\n      throw new Error(\"Invalid Move BN Input Type\");\n    }\n\n    const target = \"fields\" in value ? value.fields : value;\n\n    if (typeof target === \"object\" && \"value\" in target && \"neg\" in target) {\n      return new BN(target.value.toString()).mul(\n        target.neg ? new BN(-1) : new BN(1)\n      );\n    }\n\n    throw new Error(\"Invalid Move BN\");\n  }\n}\n"]}